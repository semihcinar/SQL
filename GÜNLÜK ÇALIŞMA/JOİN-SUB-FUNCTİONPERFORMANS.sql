SELECT COUNT(*) FROM ITEMS
SELECT COUNT(*) FROM ORDERS
SELECT COUNT(*) FROM INVOICES
SELECT COUNT(*) FROM USERS
SELECT COUNT(*) FROM INVOICEDETAILS


SELECT * FROM INVOICEDETAILS
SELECT * FROM ORDERDETAILS

set statistics time on
set statistics io on

SELECT ITM.BRAND, ITM.ITEMNAME, ITM.UNITPRICE, ITM.ID 
,ord.LINETOTAL, ord.UNITPRICE
,sum(ord.LINETOTAL), sum(ord.UNITPRICE), avg(ord.LINETOTAL), avg(ord.UNITPRICE), MIN(ORD.UNITPRICE), MAX(ORD.UNITPRICE)

FROM ITEMS ITM
inner join ORDERDETAILS ORD ON ORD.ID=ITM.ID
GROUP BY ITM.BRAND, ITM.ITEMNAME, ITM.UNITPRICE, ITM.ID, ORD.LINETOTAL, ORD.UNITPRICE


set statistics time on
set statistics io on

SELECT ITM.BRAND, ITM.ITEMNAME, ITM.UNITPRICE, ITM.ID, 

		(SELECT sum(ord.LINETOTAL) FROM ORDERDETAILS ORD WHERE ITM.ID = ORD.ID),
		(SELECT sum(ord.UNITPRICE) FROM ORDERDETAILS ORD WHERE ITM.ID = ORD.ID),
		(SELECT avg(ord.LINETOTAL) FROM ORDERDETAILS ORD WHERE ITM.ID = ORD.ID),
		(SELECT avg(ord.UNITPRICE) FROM ORDERDETAILS ORD WHERE ITM.ID = ORD.ID),
		(SELECT MIN(ORD.UNITPRICE) FROM ORDERDETAILS ORD WHERE ITM.ID = ORD.ID),
		(SELECT MAX(ORD.UNITPRICE) FROM ORDERDETAILS ORD WHERE ITM.ID = ORD.ID)

FROM ITEMS ITM 



CREATE FUNCTION DBO.GET_TOTALPRICE (@ID AS VARCHAR(30))
RETURNS FLOAT
AS
BEGIN 

declare @result as float
select @result = sum(ord.LINETOTAL) FROM ORDERDETAILS ORD WHERE ORD.ID = @ID
return @result
END

SELECT DBO.GET_TOTALPRICE(1)

USE EGITIM

INSERT INTO JOB_KAYITEKLE ([ISIM], [SOYISIM], [TARIH]) values ('SEMIH','CINAR',GETDATE())

SELECT * FROM JOB_KAYITEKLE
truncate table JOb_KAYITEKLE 

dbcc opentran